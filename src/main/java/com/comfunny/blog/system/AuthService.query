<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AuthService">

	<select id="getAuthGroupList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthGroupList][권한그룹 목록 조회][Kim Jin Ho][2016-09-13] */
			   AUTH_GROUP_SEQ
			 , AUTH_GROUP_NM
			 , AUTH_GROUP_DESC
		  FROM TB_PARAGON_AUTH_GROUP
		 WHERE DEL_YN ='N'
		 ORDER BY AUTH_GROUP_SEQ
	</select>
	<select id="getAuthCheckList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthCheckList][사용자 프로그램별 버튼 권한체크 목록][Kim Jin Ho][2016-09-13] */
			   CODE_CD AS AUTH_CD
			   ,<choose>
			   <when test='s_adminYn != null and s_adminYn.equals("Y") '>'Y'</when>
			   <otherwise>NVL(PA.AUTH_YN,'N')</otherwise>
			   </choose> AUTH_YN
		  FROM TB_PARAGON_COMM_CODE PCC
      	  LEFT OUTER JOIN TB_PARAGON_AUTH PA
        	ON PCC.CODE_CD = PA.AUTH_CD
		 WHERE CODE_GROUP_CD ='SC0014'
<!-- 		 <if test='s_adminYn != null and !s_adminYn.equals("Y") '> -->
       	   AND PA.AUTH_GROUP_SEQ = (SELECT AUTH_GROUP_SEQ
                                      FROM TB_PARAGON_AUTH_USER
                                     WHERE USER_NO = #{s_userNo}
                                       AND DEL_YN = 'N'
           )
      	   AND  PA.MENU_SEQ = (SELECT MENU_SEQ
                                FROM TB_PARAGON_MENU
                               WHERE PRO_CD =  #{s_proCd}
                                 AND DEL_YN = 'N'
           )
<!--            </if> -->
		   AND DEL_YN='N'
	</select>
	<select id="getAuthCheckMenu" resultType="String" >
		SELECT  /* [AuthService.query][getAuthCheckMenu][메뉴 권한체크][Kim Jin Ho][2016-09-13] */
			   NVL(PA.AUTH_YN,'N') AUTH_YN
		  FROM TB_PARAGON_AUTH PA
		 WHERE PA.AUTH_CD ='AUTH_VIEW'
		   AND PA.AUTH_GROUP_SEQ = (SELECT AUTH_GROUP_SEQ
                                   FROM TB_PARAGON_AUTH_USER
                                  WHERE USER_NO = #{s_userNo}
                                    AND DEL_YN = 'N'
		  )
		  AND  PA.MENU_SEQ = (SELECT MENU_SEQ
		                            FROM TB_PARAGON_MENU
		                           WHERE PRO_CD = #{s_proCd}
		                             AND DEL_YN = 'N'
		  )
	</select>
	<select id="getAuthGroupView" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthGroupList][권한그룹 목록 조회][Kim Jin Ho][2016-09-13] */
			   AUTH_GROUP_SEQ
			 , AUTH_GROUP_NM
			 , AUTH_GROUP_DESC
		  FROM TB_PARAGON_AUTH_GROUP
		 WHERE DEL_YN ='N'
		   AND AUTH_GROUP_SEQ = #{authGroupSeq}
	</select>

	<select id="getAuthUserList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthUserList][권한유저 목록 조회][Kim Jin Ho][2016-09-13] */
			   UI.USER_NO
			 , UI.USER_ID
			 , UI.USER_NM
			 , FN_COMM_CODE_NM(#{s_companyCd}, 'SC0016', UI.USER_POSITION , #{s_language}) USER_POSITION_NM
			 , FN_COMM_CODE_NM(#{s_companyCd}, 'SC0013', USER_ROLE, #{s_language}) USER_ROLE_NM
		  FROM TB_PARAGON_AUTH_USER AU
		  JOIN TB_PARAGON_USER_INFO UI
            ON AU.USER_NO = UI.USER_NO
		 WHERE AU.DEL_YN ='N'
		   AND AUTH_GROUP_SEQ = #{authGroupSeq}
		 ORDER BY AUTH_USER_SEQ DESC
	</select>

	<select id="getAuthSearchUserList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthSearchUserList][미권한자 조회 조회][Kim Jin Ho][2016-09-13] */
			   USER_NO
			 , USER_ID
			 , USER_NM
			 , USER_POSITION
			 , FN_COMM_CODE_NM(#{s_companyCd}, 'SC0016', USER_POSITION , #{s_language}) USER_POSITION_NM
			 , USER_ROLE_NM
		 FROM(
			SELECT USER_NO
				 , USER_ID
				 , USER_NM
				 , USER_POSITION
				 , FN_COMM_CODE_NM(#{s_companyCd}, 'SC0013', USER_ROLE, #{s_language}) USER_ROLE_NM
			  FROM TB_PARAGON_USER_INFO
			 WHERE DEL_YN ='N'
			   AND USER_NO NOT IN (
			   	   SELECT USER_NO
			   	     FROM TB_PARAGON_AUTH_USER
			   	    WHERE DEL_YN ='N'
			   )
		 ) A<if test="searchWordArr.size != null and searchWordArr.size != 0">
		 WHERE <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_NO LIKE '${item}%'</foreach>
		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_ID LIKE '${item}%'</foreach>
		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_NM LIKE '${item}%'</foreach>
		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_POSITION LIKE '%${item}%'</foreach>
		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">A.USER_ROLE_NM LIKE '%${item}%'</foreach></if>
	  ORDER BY USER_NM
	</select>


	<select id="getAuthColunms" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthColunms][권한 컬럼 조회][Kim Jin Ho][2016-09-13] */
			   CODE_CD                                      /*권한 코드*/
			 , 'checkbox'     AS CUSTOM_MODE
		  FROM TB_PARAGON_COMM_CODE
		 WHERE
               CODE_GROUP_CD  = 'SC0014'
		   AND DEL_YN         = 'N'
		   AND COMPANY_CD     = #{s_companyCd}
		 ORDER BY CODE_ORDER
	</select>
	<select id="getMenuAuthList" resultType="HMap" >
		SELECT /* [AuthService.query][getMenuAuthList][권한 목록 조회][Kim Jin Ho][2016-09-13] */
		       PM.MENU_SEQ                                   /*메뉴코드*/
		     , NVL(PM.MENU_PARENT_SEQ,'') MENU_PARENT_SEQ    /*메뉴부모코드*/
		     , PA.AUTH_GROUP_SEQ
		     , PM.PRO_CD                                     /*프로그램코드*/
		     , PM.MENU_NM                                    /*메뉴명*/
		     , PM.MENU_ORDER<foreach collection="dt_columns" item="item"  index="idx" >
		     , NVL(${item.CODE_CD},'N') ${item.CODE_CD}</foreach>
		     , PM.IN_USER_ID                                   /*작성자*/
		     , PM.IN_DT                                        /*작성일*/
		  FROM TB_PARAGON_MENU PM
		  LEFT JOIN (
		    SELECT MENU_SEQ
		    	 , AUTH_GROUP_SEQ<foreach collection="dt_columns" item="item"  index="idx" >
		         , MAX(CASE WHEN A.AUTH_CD = '${item.CODE_CD}' THEN A.AUTH_YN ELSE NULL END ) ${item.CODE_CD}</foreach>
		      FROM TB_PARAGON_AUTH A
		     WHERE AUTH_GROUP_SEQ = #{authGroupSeq}
		     GROUP BY A.MENU_SEQ , A.AUTH_GROUP_SEQ
		  ) PA
		  ON PM.MENU_SEQ = PA.MENU_SEQ
		 ORDER BY MENU_PARENT_SEQ, MENU_ORDER
	</select>

	<update id="saveMenuAuth" >
		MERGE /* [AuthService.query][saveMenuAuth][권한저장][Kim Jin Ho][2016-09-21] */
		 INTO TB_PARAGON_AUTH
		USING DUAL
		   ON (AUTH_GROUP_SEQ	= #{authGroupSeq}
		  AND  MENU_SEQ			= #{menuSeq}
		  AND  AUTH_CD			= #{authCd}
		 )
		 WHEN MATCHED THEN
		      UPDATE
		         SET  AUTH_YN    = #{authYn}
		            , UP_USER_ID = #{s_userId}
		            , UP_DT      = SYSDATE
		 WHEN NOT MATCHED THEN
		      INSERT (
			   AUTH_GROUP_SEQ
			 , MENU_SEQ
			 , AUTH_CD
			 , AUTH_YN
			 , IN_USER_ID
			 , UP_USER_ID
		)
		VALUES (
			   #{authGroupSeq}
			 , #{menuSeq}
			 , #{authCd}
			 , #{authYn}
			 , #{s_userId}
			 , #{s_userId}
		)
	</update>
	<update id="saveMenuAuthMysql" >

		INSERT INTO TB_PARAGON_AUTH(
			   AUTH_GROUP_SEQ
			 , MENU_SEQ
			 , AUTH_CD
			 , AUTH_YN
			 , IN_USER_ID
			 , UP_USER_ID
		)
		VALUES (
			   #{authGroupSeq}
			 , #{menuCd}
			 , #{codeCd}
			 , #{authYn}
			 , #{s_userId}
			 , #{s_userId}
		)
		ON DUPLICATE KEY UPDATE
			   AUTH_YN     = #{authYn}
			 , UP_USER_ID = #{s_userId}
	</update>


	<delete id="deleteUserAuth" >
		DELETE /* [AuthService.query][deleteUserAuth][권한사용자 삭제][Kim Jin Ho][2016-09-13] */
		  FROM TB_PARAGON_AUTH_USER
		 WHERE AUTH_GROUP_SEQ = #{authGroupSeq}
	</delete>

	<insert id="insertUserAuth" >
		INSERT /* [AuthService.query][insertUserAuth][권한사용자 등록][Kim Jin Ho][2016-09-13] */
		  INTO TB_PARAGON_AUTH_USER (
		  		  AUTH_USER_SEQ
		  		, AUTH_GROUP_SEQ
				, USER_NO
				, UP_USER_ID
				, IN_USER_ID
				, UP_DT
		  )
		VALUES(	SQ_AUTH_USER01.NEXTVAL
				, #{authGroupSeq}
				, #{userNo}
				, #{s_userId}
				, #{s_userId}
				, SYSDATE
		)
	</insert>

	<update id="updateAuthGroup" >
		UPDATE /* [AuthService.query][updateAuthGroup][권한그룹 정보 수정][Kim Jin Ho][2016-09-13] */
		       TB_PARAGON_AUTH_GROUP
		   SET AUTH_GROUP_NM = #{authGroupNm}
		     , AUTH_GROUP_DESC = #{authGroupDesc}
		     , UP_USER_ID = #{s_userId}
		 WHERE AUTH_GROUP_SEQ = #{authGroupSeq}
	</update>
	<insert id="insertAuthGroup" >
		INSERT /* [AuthService.query][insertAuthGroup][권한그룹 정보 등록][Kim Jin Ho][2016-09-13] */
		  INTO TB_PARAGON_AUTH_GROUP (
		  		  AUTH_GROUP_SEQ
		  		, AUTH_GROUP_NM
				, AUTH_GROUP_DESC
				, UP_USER_ID
				, IN_USER_ID
		  )
		VALUES(   SQ_AUTH_GROUP01.NEXTVAL
		 		, #{authGroupNm}
				, #{authGroupDesc}
				, #{s_userId}
				, #{s_userId}
		)
	</insert>

	<delete id="deleteAuthGroup" >
		UPDATE /* [AuthService.query][updateAuthGroup][권한그룹 정보 수정][Kim Jin Ho][2016-09-13] */
		       TB_PARAGON_AUTH_GROUP
		   SET DEL_YN = 'Y'
		     , UP_USER_ID = #{s_userId}
		     , UP_DT = SYSDATE
		 WHERE AUTH_GROUP_SEQ = #{authGroupSeq}
	</delete>

</mapper>
